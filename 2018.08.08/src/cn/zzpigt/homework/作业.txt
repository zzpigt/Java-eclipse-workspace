
#1. 了解享元模式

2. 简述Object类中的方法
Object 中有9个方法，只有一个默认的构造方法

clone方法：创建并返回此对象的一个副本
		Object类是所有类的父类，那么子类重写此方法的时候
		是可以修改这个方法的访问修饰符的，但是只能往小了写，不能往访问范围大的写

equals方法：判断两个对象是否相等，这个方法也得重写才能使用，不重写就是相当于==，判断两个引用是不是指向同一个对象
		重写这个方法要遵循5个点
		1.自反性	x.equals(x)->true
		2.对称性	x.equals(y)->y.equals(x)->true
		3.传递性	x.equals(y)->y.equals(z)->x.equals(z)->true
		4.一致性	x.equals(y) 多次调用始终返回同一个结果
		5.对一切非空引用值x,x.equals(null)都是返回false；
		、
int hashCode()这个方法和equals配套使用，只要是要重写equals那么hashCode也要重写
	返回的是对象的哈希码值
	还有3个规定：
	1.同一个对象，多次调用hashcode结果必须是一致的
	2.equals认为相等的对象，hashcode的结果必须一致
	3.equals认为不想等的对象，hashcode的结果最好不一致
		默认调用toString（）打印类名@哈希值
getClass()返回这个对象
finalize()垃圾回收：没有引用指向的对象
toString()变成字符串：往往通过重写这个方法，来打印对象的成员属性的值，方便调试程序
wait() 学来线程再说，我现在也不懂什么是线程


3. 简述 equals toString hashCode的方法作用，以及重写的要求
这些我都写在上面了

4. 简述为什么重写equals方法后一定要重写hashCode
因为hashCode的3条规定，也是为来程序的运行效率
hashcode规定在equals认为不相等的对象，hashcode的结果最好不一致

5. 简述基本类型以及对应包装类的区别
基本类型不能使用Object里面的方法
那么有几点是基本类型不能完成的
1.基本类型不能为Null
2.基本类型不能调用成员属性
3.基本类型不能调用方法
4.基本类型可以和字符串转换（这一点类型转换也可以实现吧，只是包装类实现起来就非常容易）

