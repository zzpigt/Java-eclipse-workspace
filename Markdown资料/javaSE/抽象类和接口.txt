
【抽象修饰符】

 abstract

 1. 修饰方法
	说明该方法是一个抽象方法
	抽象方法没有方法体（没有实现过程）
	专门用来给子类重写，实现多态

 2. 修饰类
	说明该类是一个抽象类
	抽象类里面可以声明抽象方法（普通的类里不能有抽象方法）
	抽象类不能实例化对象
	专门用来被子类继承的，用来实现多态


 3. 注意
	1. 继承一个抽象类必须覆盖抽象类中的所有抽象方法，
	除非这个子类也是一个抽象类

	2. 抽象类中可以有构造器呢，
	抽象类中有构造器，目的是为了强制子类为父类中的成员属性初始化


【接口】
	interface

	1. 概念：一系列常量和抽象方法的集合

	2. 让类去实现接口  implements

	3. 接口的特点
		1) 不能实例化
		2) 接口中只能有常量和抽象方法
		 常量默认可以省略 public final
		 方法默认省略 public abstract
		3) 实现接口必须实现接口中的所有方法

		4) 一个类可以实现(implements)多个接口

		5) 接口可以继承(extends)多个接口


【抽象类和接口的异同】


	1. 共同点：
		1）都不能实例化
		2）作为它们的子类都必须实现所有的抽象方法，除非这个子类也是一个抽象的

	2. 不同点：
		1）抽象类中可以有构造器
		2）抽象类中可以有变量
		3）抽象类中可以有具体方法
		4）类只能继承一个父类，但是可以实现多个接口
		5）接口可以继承多个接口

	* 继承抽象类必须体现 is-a 的关系，而接口不怎么关心子类
	* 接口在实际开发中往往作为一种规范而应用



