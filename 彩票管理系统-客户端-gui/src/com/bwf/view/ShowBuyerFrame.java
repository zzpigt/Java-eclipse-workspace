/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.bwf.view;

import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.List;

import javax.swing.JOptionPane;

import com.bwf.client.ClientDemo;
import com.bwf.jar.MyRequest;
import com.bwf.jar.MyResponse;
import com.bwf.util.UiUtil;

/**
 *
 * @author admin
 */
public class ShowBuyerFrame extends javax.swing.JFrame {
	
	private ObjectOutputStream oos;
	MyResponse lastResponse;
	private String uName;
    /**
     * Creates new form ShowBuyerFrame
     */
    public ShowBuyerFrame(ObjectOutputStream oos,MyResponse lastResponse, String uName) {
    	this.oos = oos;
		this.lastResponse = lastResponse;
		this.uName = uName;
    	initComponents();
        init();
    }
    
    private void init(){
    	this.setTitle("九州第一智商税务局成员名单");
        this.setResizable(false);
        UiUtil.setFrameCenter(this);
        UiUtil.setFrameImage(this);
        this.jTextField1.setText("   ");
        this.jTextField1.requestFocus();
        this.jTextArea1.setText("彩民id\t用户名\t密码\t余额\t在线状态\n");
        
        synchronized (ClientDemo.class) {
			if (ClientDemo.lastResponse == null) {
				try {
					ClientDemo.class.wait();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}

			// 读到了消息
			lastResponse = ClientDemo.lastResponse;
			ClientDemo.lastResponse = null;
//			System.out.println(lastResponse.getrMeg().get(MyResponse.MEG_CONTENT));
			//把排序好的彩民信息发到historylist中返回过来的
			List<String> buyerMeg = lastResponse.getHistoryList();
			for (String b : buyerMeg) {
				String text = jTextArea1.getText();
				jTextArea1.setText(text+b+"\n");
			}

			ClientDemo.class.notify();
		}
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSearchButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jBackButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMoneyMenuItem = new javax.swing.JMenuItem();
        jIDMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setText("彩民信息");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jSearchButton.setBackground(new java.awt.Color(0, 102, 255));
        jSearchButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jSearchButton.setForeground(new java.awt.Color(204, 0, 153));
        jSearchButton.setText("查询");
        jSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					jSearchButtonActionPerformed(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        jTextField1.setText("ididididid");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel2.setText("请输入彩民ID:");

        jBackButton.setBackground(new java.awt.Color(0, 0, 0));
        jBackButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jBackButton.setForeground(new java.awt.Color(255, 255, 255));
        jBackButton.setText("返回");
        jBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBackButtonActionPerformed(evt);
            }
        });

        jMenu1.setText("系统");

        jMenuItem4.setText("退出系统");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("排序");

        jMoneyMenuItem.setBackground(new java.awt.Color(0, 102, 255));
        jMoneyMenuItem.setText("按余额排序");
        jMoneyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					jMoneyMenuItemActionPerformed(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
        jMenu2.add(jMoneyMenuItem);

        jIDMenuItem.setBackground(new java.awt.Color(0, 255, 255));
        jIDMenuItem.setText("按ID排序");
        jIDMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					jIDMenuItemActionPerformed(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
        jMenu2.add(jIDMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(jLabel1)))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jSearchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBackButton)
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSearchButton)
                    .addComponent(jBackButton))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	// 退出系统
    	System.exit(0); 
    }                                          

    private void jMoneyMenuItemActionPerformed(java.awt.event.ActionEvent evt) throws IOException {                                               
    	// 按余额排序
    	this.jTextArea1.setText("彩民id\t用户名\t密码\t余额\t在线状态\n");
    	MyRequest request = new MyRequest(MyRequest.TYPE_ADMIN_SORTBUYER_BYMONEY);
		request.getUmap().put(MyRequest.MEG_USERNAME, uName);
		request.getUmap().put(MyRequest.MEG_LEVEL, "管理员");
		// 包装好了，就发送过去，序列化
		oos.writeObject(request);
		oos.flush();
		synchronized (ClientDemo.class) {
			if (ClientDemo.lastResponse == null) {
				try {
					ClientDemo.class.wait();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}

			// 读到了消息
			MyResponse lastResponse = ClientDemo.lastResponse;
			ClientDemo.lastResponse = null;
			System.out.println(lastResponse.getrMeg().get(MyResponse.MEG_CONTENT));
			//把排序好的彩民信息发到historylist中返回过来的
			List<String> buyerMeg = lastResponse.getHistoryList();
			for (String b : buyerMeg) {
				String text = jTextArea1.getText();
				jTextArea1.setText(text+b+"\n");
			}

			ClientDemo.class.notify();
		}
    }                                              

    private void jIDMenuItemActionPerformed(java.awt.event.ActionEvent evt) throws IOException {                                            
    	// 按ID排序
    	this.jTextArea1.setText("彩民id\t用户名\t密码\t余额\t在线状态\n");
    	MyRequest request = new MyRequest(MyRequest.TYPE_ADMIN_SORTBUYER_BYID);
		request.getUmap().put(MyRequest.MEG_USERNAME, uName);
		request.getUmap().put(MyRequest.MEG_LEVEL, "管理员");
		// 包装好了，就发送过去，序列化
		oos.writeObject(request);
		oos.flush();
		synchronized (ClientDemo.class) {
			if (ClientDemo.lastResponse == null) {
				try {
					ClientDemo.class.wait();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}

			// 读到了消息
			MyResponse lastResponse = ClientDemo.lastResponse;
			ClientDemo.lastResponse = null;
			System.out.println(lastResponse.getrMeg().get(MyResponse.MEG_CONTENT));
			//把排序好的彩民信息发到historylist中返回过来的
			List<String> buyerMeg = lastResponse.getHistoryList();
			for (String b : buyerMeg) {
				String text = jTextArea1.getText();
				jTextArea1.setText(text+b+"\n");
			}

			ClientDemo.class.notify();
		}
    }                                           

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jSearchButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException {                                              
    	 // 查询按钮
    	this.jTextArea1.setText("彩民id\t用户名\t密码\t余额\t在线状态\n");
    	String buyerId = this.jTextField1.getText().trim();

		MyRequest request = new MyRequest(MyRequest.TYPE_ADMIN_FINDBUYER);
		request.getUmap().put(MyRequest.MEG_USERNAME, uName);
		request.getUmap().put(MyRequest.MEG_LEVEL, "管理员");
		request.getUmap().put(MyRequest.ADMIN_BUYERID, buyerId);
		// 包装好了，就发送过去，序列化
		oos.writeObject(request);
		oos.flush();

		synchronized (ClientDemo.class) {
			if (ClientDemo.lastResponse == null) {
				try {
					ClientDemo.class.wait();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}

			// 读到了消息
			lastResponse = ClientDemo.lastResponse;
			ClientDemo.lastResponse = null;
//			System.out.println(lastResponse.getrMeg().get(MyResponse.MEG_CONTENT));
			// 查询分成功失败,成功是把查询到的彩民信息发到historylist中返回过来的
			if (lastResponse.isSuccess()) {
				// 显示信息
				List<String> buyerMeg = lastResponse.getHistoryList();
				for (String b : buyerMeg) {
					String text = jTextArea1.getText();
					jTextArea1.setText(text+b+"\n");
				}
				
			} else {
				JOptionPane.showMessageDialog(this, "查询失败，请重新输入！！");
				this.jTextField1.setText("   ");
				this.jTextField1.requestFocus();
			}

			ClientDemo.class.notify();
		}
    }                                             

    private void jBackButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
    	// 返回按钮
    	AdminFrame af = new AdminFrame(oos,lastResponse,uName);
		af.setVisible(true);
		this.dispose();
    }                                           

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ShowBuyerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ShowBuyerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ShowBuyerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ShowBuyerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ShowBuyerFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jBackButton;
    private javax.swing.JMenuItem jIDMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMoneyMenuItem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jSearchButton;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
