package com.bwf.service.impl;

import java.io.ObjectOutputStream;
import java.sql.Connection;
import java.util.Set;

import com.bwf.bean.Admin;
import com.bwf.bean.Lottery_info;
import com.bwf.bean.User;
import com.bwf.dao.AdminDao;
import com.bwf.dao.Lottery_infoDao;
import com.bwf.dao.UserDao;
import com.bwf.database.ConnectionFactory;
import com.bwf.jar.MyRequest;
import com.bwf.jar.MyResponse;
import com.bwf.server.ServerThread;
import com.bwf.service.UserService;

public class UserServiceImpl implements UserService {

	private User u = null;
	private AdminDao ad;
	private UserDao ud;
	private Lottery_infoDao ld;
	

	public void setUd(UserDao ud) {
		this.ud = ud;
	}

	public void setAd(AdminDao ad) {
		this.ad = ad;
	}
	
	public void setLd(Lottery_infoDao ld) {
		this.ld = ld;
	}
	

	//将彩票信息添加到response中
	private void addLotteryMeg(MyResponse response) {
		Connection conn = null;
		Lottery_info li = null;
		try {
			conn = ConnectionFactory.getConnection();
			li = ld.getLastMeg(conn);
		} catch (Exception e) {
			e.printStackTrace();
		}
		response.getrMeg().put(MyResponse.LETTERY_TIME, li.getTime());
		response.getrMeg().put(MyResponse.LETTERY_PRICE, String.valueOf(li.getPrice()));
		response.getrMeg().put(MyResponse.LETTERY_SELLNUM, String.valueOf(li.getSellnum()));
		response.getrMeg().put(MyResponse.LETTERY_POOLMONEY, String.valueOf(li.getPoolmoney()));
	}

	@Override
	public MyResponse doRegist(MyRequest request, ObjectOutputStream oos) throws Exception {
		String uName = request.getUmap().get(MyRequest.MEG_USERNAME);
		String uPwd = request.getUmap().get(MyRequest.MEG_USERPWD);

		// 判断是有用户名已经存在【数据库】
		Connection conn = null;
		try {
			conn = ConnectionFactory.getConnection();

			if (ud.getByName(uName, conn) != null) {
				// 用户名已经存在,包装一个返回信息的类
				MyResponse response = new MyResponse(MyResponse.TYPE_REGISE);
				response.setSuccess(false);
				response.getrMeg().put(MyResponse.MEG_CONTENT, "用户名已经存在，请重新输入！！");
				addLotteryMeg(response);
				
				oos.writeObject(response);
				oos.flush();
				throw new Exception("用户名已经存在！！");
			}
			// 可以注册
			u = new User();
			u.setName(uName);
			u.setPwd(uPwd);
			u.setState(0);// 这个需要写成默认的
			u.setMoney(0.0);
			ud.insert(u, conn);
			// 用户插入数据库后，返回给客户端信息
			MyResponse response = new MyResponse(MyResponse.TYPE_REGISE);
			response.setSuccess(true);
			response.getrMeg().put(MyResponse.MEG_CONTENT, "注册成功");
			addLotteryMeg(response);

			oos.writeObject(response);
			oos.flush();

			return response;

		} catch (Exception e) {
			throw e;
		}

	}

	@Override
	public MyResponse doLogin(MyRequest request, ObjectOutputStream oos) throws Exception {
		String uName = request.getUmap().get(MyRequest.MEG_USERNAME);
		String uPwd = request.getUmap().get(MyRequest.MEG_USERPWD);
		String level = request.getUmap().get(MyRequest.MEG_LEVEL);

		// 判断输入的用户名和密码是否正确
		Connection conn = null;
		try {
			conn = ConnectionFactory.getConnection();
			MyResponse response = null;

			// 这里判断请求者的身份，彩民就是ud，管理者和公证员就是ad
			Object whichMen = null;
			if ("彩民".equals(level)) {
				whichMen = ud.getByNameAndPwd(uName, uPwd, conn);
			} else {
				whichMen = ad.getByNameAndPwd(uName, uPwd, conn);
			}
			if (whichMen != null) {
				// 判断用户是否已经登入过了
				Set<String> keySet = ServerThread.onLineMap.keySet();
				for (String s_name : keySet) {
					if (s_name.equals(uName)) {
						System.out.println("用户已经登入，不要重复上线！！");
						response = new MyResponse(MyResponse.TYPE_LOGIN);
						response.setSuccess(false);
						response.getrMeg().put(MyResponse.MEG_CONTENT, "用户已经登入，不要重复上线！！");
						addLotteryMeg(response);
						
						oos.writeObject(response);
						oos.flush();
						return response;

					}
				}
				// 登入成功
				ServerThread.onLineMap.put(uName, oos);
				response = new MyResponse(MyResponse.TYPE_LOGIN);
				response.setSuccess(true);
				response.getrMeg().put(MyResponse.MEG_CONTENT, "登入成功！！");
				if (whichMen instanceof User) {
					response.getrMeg().put(MyResponse.MEG_ID, String.valueOf(((User) whichMen).getId()));
					response.getrMeg().put(MyResponse.MEG_MONEY, String.valueOf(((User) whichMen).getMoney()));
				} else if (whichMen instanceof Admin) {
					response.getrMeg().put(MyResponse.MEG_ID, String.valueOf(((Admin) whichMen).getId()));
				}
				
				addLotteryMeg(response);
				oos.writeObject(response);
				oos.flush();
			} else {
				// 登入失败
				response = new MyResponse(MyResponse.TYPE_LOGIN);
				response.setSuccess(false);
				response.getrMeg().put(MyResponse.MEG_CONTENT, "登入失败！！");

				addLotteryMeg(response);
				oos.writeObject(response);
				oos.flush();
			}
			return response;
		} catch (Exception e) {
			throw e;
		}
	}

	@Override
	public MyResponse doChangePwd(MyRequest request, ObjectOutputStream oos) throws Exception {
		String uname = request.getUmap().get(MyRequest.MEG_USERNAME);
		String uPwd = request.getUmap().get(MyRequest.MEG_USERPWD);
		String newPwd = request.getUmap().get(MyRequest.MEG_NEWPWD);
		Connection conn = null;
		conn = ConnectionFactory.getConnection();
		MyResponse response = null;
		u = ud.getByName(uname, conn);
		response = new MyResponse(MyResponse.TYPE_CHANGEPWD);
		if (u.getPwd().equals(uPwd)) {
			u.setPwd(newPwd);
			ud.update(u, conn);
			response.setSuccess(true);
			response.getrMeg().put(MyResponse.MEG_CONTENT, "修改密码成功");

		} else {
			response.setSuccess(false);
			response.getrMeg().put(MyResponse.MEG_CONTENT, "修改密码失败,原密码错误");

		}
		addLotteryMeg(response);
		oos.writeObject(response);
		oos.flush();
		return response;
	}

	@Override
	public MyResponse doRecharge(MyRequest request, ObjectOutputStream oos) throws Exception {
		String uName = request.getUmap().get(MyRequest.MEG_USERNAME);
		Double money = Double.parseDouble(
				request.getUmap().get(MyRequest.MEG_ADDMONEY));
		String level = request.getUmap().get(MyRequest.MEG_LEVEL);
		Connection conn=null;
		MyResponse response=new MyResponse(MyResponse.TYPE_RECHARGE);
		conn=ConnectionFactory.getConnection();
		u = ud.getByName(uName, conn);
		u.setMoney(money+u.getMoney());
		ud.update(u, conn);
		response.setSuccess(true);
		response.getrMeg().put(MyResponse.MEG_CONTENT, "充值成功!");
		
		addLotteryMeg(response);
		oos.writeObject(response);
		oos.flush();
		return response;
	}

}
